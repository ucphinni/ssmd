

CREATE TABLE IF NOT EXISTS fst_cong (
    id CHAR(4) PRIMARY KEY NOT NULL,
    name VARCHAR(35) NOT NULL,
    geom GEOMETRY(Polygon, 4326) NOT NULL,
    active BOOLEAN NOT NULL DEFAULT false
);

insert into fst_cong(id,name,geom)
SELECT 'NWNJ','North Willingboro', ST_GeomFromWKB(decode('
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
','base64'))
UNION ALL SELECT 'EWNJ','East Willingboro', ST_GeomFromWKB(decode('
AQMAAAABAAAAfAEAAFzPXX8zuFLAVLbzxz8FREAl3urqMrhSwJ0lSABOBURAO2NdHTK4UsAMHQPb
YAVEQN3iEx0yuFLAW4ud32AFREBdGrXtMLhSwBMZ2K58BURAkYF5qzC4UsB7nBzBggVEQDeCI5Yw
uFLAmGTTtYQFREDxKUINMLhSwKmD0UGRBURAYQfZxC+4UsDWoPfklwVEQCVbxQEvuFLAFfTH1agF
REC28c89LrhSwMRgPgW6BURAyy5H/S24UsB7dBfKwAVEQP/GAt0tuFLAzdqHLMQFREBeapqRLbhS
wMY3b+zHBURAWIqZXy24UsBHvnC8ygVEQL1P8BgtuFLA7i9Lc8sFRECYmpfELLhSwGjRd03MBURA
yJUBcSq4UsDeNsMQ0AVEQJ49nbQeuFLAACEqkuIFREAzAv3eErhSwHRWvrP1BURANi4rmQy4UsAI
mTS9/wVEQMW/gfEHuFLAbnEqpAYGREDIMmD4AbhSwJlx9lQOBkRA94Ruaf23UsD0PHQRFAZEQMQF
0Fz5t1LArQfvKRkGREDMnJqK77dSwLyg0uAlBkRAOhnG1em3UsB1pHhhLQZEQP8zDIvnt1LAD0/U
ZDAGREDWVqMJ37dSwEkAkjk7BkRAIYE2A9W3UsA1k7nwRwZEQEPL/XLRt1LA49Swe0wGREAeLI0t
yrdSwCYlw8BVBkRA4yW8hMe3UsDGx/bfWQZEQAKvwxfGt1LAQa37DloGREDyxwIxwbdSwBPwoLBa
BkRABkY4jKS3UsBFFLilXAZEQOjStVGWt1LACH+Jnl0GRECUEvQ6d7dSwJDVwDhfBkRAgfW6xFm3
UsDXiU9IYQZEQN0VTy9Zt1LAYAi4UmEGREDo4XtOVrdSwB3pFIZhBkRAPzHjd1W3UsBd4gaVYQZE
QNqmz4dBt1LA44Zv+GIGREB6GgxVOrdSwJmMvHhjBkRA2qv0aB+3UsArdq5bZQZEQJqr63wZt1LA
jtsBxGUGREAxXufHGLdSwJs3btBlBkRA18L/6RK3UsAyeIA3ZgZEQLi69638tlLAorpuwWcGRECG
/hAg+rZSwEiMte5nBkRAnawqDOK2UsBOrZ6kaQZEQOCdZKDNtlLAgJ7e3GoGREAijYftwLZSwAHJ
lOBrBkRAeCWH/7u2UsALVkEsbAZEQPyazU67tlLAt8fXNmwGREAHEtCbrLZSwClHQRhtBkRAsxyt
FJ62UsBVHANHbgZEQNnm5UCJtlLAjBtJf28GREABzldJeLZSwMT+i2FwBkRA3mecHXW2UsDbUxrx
cAZEQPMtSs1ytlLAz6UEWnEGREAL19MNY7ZSwNDpDjpyBkRA8ejPc0m2UsDDiKIZdAZEQOvY3Psx
tlLA77xlpXUGRECEV0QCMbZSwJQbwrZ1BkRA9hnAQCO2UsCgzq6rdgZEQAwR8/satlLA6wjTRHcG
REAmTZshFbZSwGwgNbF3BkRAW3Vr+gi2UsCOxwGveAZEQHGznbwItlLAzRkNtHgGRECqbyjW/bVS
wLNcaoJ5BkRASEO1Qf21UsA11mWNeQZEQCcFHIX0tVLAJdu1OnoGRECj/1MW7LVSwKSqO796BkRA
ntlbP+O1UsDwf630egZEQGhgVMLitVLAAL7D7HoGREAIIE/P3rVSwPMVwKx6BkRAGpSW99e1UsAM
Ls89egZEQE/2MyDWtVLAkkbf/3kGRECn4UVG0rVSwMzWf355BkRA3FVrnc61UsDfCvTjeAZEQBsC
H6/MtVLAay3c5ngGREAdHxunyrVSwLE90zl5BkRAEiUKHcm1UsCZzsWZegZEQHouia7ItVLAsT7u
C3sGREAD8w2HxrVSwPhAgbp2BkRABMKPosS1UsDfDYtdcwZEQDDC7Lu4tVLA0IVTNFsGREDtq5T5
qrVSwFs91HA/BkRARerOAJO1UsAL9q3BDwZEQHdbXvCFtVLAxVESDfUFREBJNLfGb7VSwNYg2WTJ
BURAUFaiIF61UsAW4x2TpQVEQI1b3hZLtVLAFwqPyX4FREDLODhxObVSwFUbDy5bBURAAowJhyS1
UsB0iPW5LwVEQHXWB3jxtFLArJmXWskEREAcEitp2rRSwIrxrqKcBERAoorrc420UsDV0t9TAgRE
QAH26JlOtFLAhVnRx4MDRECCBg5lMLRSwKpwrJRHA0RAQ/tZcBO0UsBkbK1/DQNEQMeBTATps1LA
MCclWLkCRECGNyCRv7NSwIPqB9JlAkRAyDA1kZWzUsDTfi9MEgJEQOdrqwl5s1LAYnyv6NkBREAp
cbTKV7NSwBGhuQqZAURAmMMUESKzUsDFOGV+LAFEQJ5hXQERs1LAU7k/DQoBREC5W5+IArNSwAnL
wqTtAERANLnAswqzUsBCB21X5ABEQOqWypgXs1LAbWsmttQAREAjpdT1HrNSwE1JYX/IAERAyCSP
qSOzUsCUtovltgBEQKBCpMwns1LARdPkZqIAREC/dHk9LLNSwMTGrSaOAERA2/3FKzKzUsDnfgRH
dQBEQBOd8+81s1LA21Jjh2YAREC68GBNN7NSwDyOMQljAERAyRLWqzyzUsAuu4MOUABEQJKpRIRB
s1LAgUqWjT4ARED4IzsZSrNSwJQFjmEfAERAxdd2BVWzUsAau5m49v9DQOIflb5cs1LAGEdwLNn/
Q0BsCHfNX7NSwFE+4jDP/0NA4WUS7GOzUsD3v/Oqwf9DQCuD/Shns1LAywHnpbn/Q0BxoldparNS
wMbLny6z/0NA+ySRDXazUsDlq5Wcnf9DQNT6mXeCs1LAxTjiu4v/Q0BaFH8Do7NSwBJKbJ9b/0NA
21Jns6+zUsC+qtSbSf9DQP6uGL+2s1LAeEErbD7/Q0Ag4itDvbNSwITG04Iz/0NAB97t1cGzUsDa
ePVsKf9DQPDNQ2fGs1LAQCiW5Bz/Q0ApvENQy7NSwLeaunYL/0NAMGddlM2zUsDoF9JP/f5DQKy4
K33Ps1LA6+5Wze3+Q0A1DGlX0LNSwI0w+e3f/kNAqkeG9c+zUsDLI74m0/5DQP6f+zjPs1LAglxi
Gsb+Q0BgUYvIzbNSwCy6RPa6/kNAdsCorMmzUsDP/nGtp/5DQDHHbbDEs1LABownqZf+Q0Dsp2LB
vbNSwFq1OsCF/kNAR01nvLqzUsALpqg9f/5DQFGht5qws1LAUtmKAWb+Q0DBA+jln7NSwFRt0gg9
/kNAF8UvZJKzUsCJX3LuG/5DQFchPxSIs1LAOJ+QhQD+Q0B05ggDgrNSwHPi/3Lm/UNA9ZXsmX6z
UsAUUFvPzv1DQBtD21J9s1LA70QUmbz9Q0CVsvgDfrNSwFzr2cu1/UNACITzkpCzUsD3yA8+tv1D
QCQGsAats1LAgvQVAbX9Q0CD8sfyxbNSwEQIm/W1/UNAZfdqU9izUsBBvGuAtP1DQGcKyDvrs1LA
zIxqCrP9Q0Az9RYM/rNSwBwb8CGv/UNANMYITxq0UsAl4+zop/1DQDsqnmEztFLAH1zNcJ39Q0C1
pbTribRSwAT+Yk1w/UNAK7PqKNu0UsCiqxNLRf1DQMH2qTIbtVLAe6bymCP9Q0AGQ065QrVSwDK8
/8sO/UNAs+JD9sC1UsDGKldlzPxDQJ1O4VP2tVLAbJvSabD8Q0DzzZbV97VSwLowWeix/ENAGbx/
Jf+1UsBAGFM4ufxDQF37BdB2tlLAEdysHiz9Q0CMt39hh7ZSwI+LPgY8/UNAzMaDAZS2UsBDfrEk
SP1DQEjykR2UtlLAd0+zP0j9Q0AlqXrVqLZSwBdM3yNc/UNAfY7dJrO2UsCkErwLZv1DQOVklJi7
tlLAzju8VW39Q0Cl16ptvbZSwJqyo1pv/UNAxrAEvL22UsAGLxL2b/1DQAo02nK+tlLA0jvTYHH9
Q0D2o/9Dv7ZSwIIUQT9z/UNALBR+eb+2UsB9UJ+Wdf1DQPdwLp6/tlLAhQMrMnf9Q0BTQbbUz7ZS
wG2Sd2Rz/UNAx+y42tG2UsDRju/qcv1DQC3U1ODXtlLAfuIigXH9Q0A5Q2ui2bZSwH4lS5F0/UNA
dyZcRNq2UsCOHMurdf1DQAuU8w/btlLAsDTODnf9Q0CGMEbi4bZSwM7qKyN//UNAidPWefK2UsDU
Z+yukP1DQBKGR/j1tlLAsSUXgJT9Q0DQnFtBArdSwPVq++uh/UNAgD8Qggq3UsB38hK4qv1DQFo+
xSISt1LAoUbj2LL9Q0AIa0M/E7dSwAG2Lhi0/UNAvYNaPh+3UsAfUfqOwf1DQN5jpGMgt1LAPnIg
2ML9Q0BF8FwcI7dSwIRWR9rF/UNAew71lTO3UsBlu+EP2P1DQBvfsGo4t1LAn93JZt39Q0Afudew
OLdSwMXZ8rXd/UNA59G6bjy3UsAa2sTu4f1DQEPyQCJPt1LAt9WUCPf9Q0CcfGkOUbdSwFOsMTT5
/UNAaJYMi1m3UsABbTaeAv5DQMY0P2Bdt1LAgMKc3gb+Q0CENLUeXrdSwH9xWbQH/kNAQGRkoWu3
UsBD2MjdFv5DQDWlGGV6t1LACIToeyf+Q0C2C2beg7dSwOLVINIx/kNA+bT4V4i3UsDAMgi0Nv5D
QCdhU0GJt1LA/9buyzf+Q0DswV5ClLdSwCiNv/5E/kNAyNj2dZ+3UsBZF93iUf5DQA2OixSjt1LA
81kK+FX+Q0Aa1JOno7dSwE+84p1W/kNAIVL+46y3UsCSOM4IYf5DQGWIJAOzt1LANld48Gf+Q0Co
b6JVvrdSwAhT5JJ0/kNAOmVxib+3UsBxEF7qdf5DQAzBNbjJt1LA+dF0QIH+Q0BlPlvTz7dSwHQi
e7eH/kNARKnTDNG3UsAGQqIDif5DQFYp6E/Ut1LAi1+A1Y3+Q0DuSmas17dSwMYfRVuT/kNAp7oP
Sti3UsAaGElelP5DQCUcDVngt1LAhXRCh6L+Q0Di66676bdSwJHjBy6z/kNAsb4x1ey3UsCkHI6t
uP5DQBGiFDXvt1LAl9bN47z+Q0A+aH8e87dSwLbsiNTD/kNAabRQq/e3UsCWobQozP5DQCsxcjj4
t1LAz74cK83+Q0DXrDrv+bdSwDzLztzP/kNAnmnLlfu3UsD2Wv500v5DQHNuPo//t1LA5fKz5df+
Q0AssslOALhSwGuGVtvY/kNAa5lAnQK4UsAFkdXQ2/5DQHJJ3CQDuFLA2JLNftz+Q0AMbd0KBLhS
wHFStaXd/kNARhX+uQi4UsD9lFDF4v5DQHLjp3ALuFLAOKPMROX+Q0AZ5MmcDbhSwOQ6wUTn/kNA
e63KGw64UsB9I4qs5/5DQE0DyR4RuFLAzm6lIur+Q0CSNcjIEbhSwD6wVK3q/kNARfhiPRe4UsBP
qOSG7v5DQBC6bs0YuFLAsIUyoe/+Q0CWr0qzHrhSwCXCbqzz/kNAq5e87iK4UsALUUeT9v5DQOR5
r/AiuFLA5wmmlPb+Q0AOcYW5I7hSwMgcNR73/kNAq6f3vyO4UsB7PYwi9/5DQGVfRM8juFLACJpE
Lff+Q0CKVBKTJ7hSwI6oFsL5/kNAaEkw4SW4UsDFyczs+v5DQOFKh1YhuFLABpc9Df7+Q0DuDMl2
ELhSwHddKPoJ/0NAzaHKDf23UsDnJeOXGf9DQHCSaZvst1LAk6oc9yT/Q0DQF5iQ2rdSwAOzxc8y
/0NATQDjSsi3UsCsrJhOQP9DQBPcdHO5t1LAnlB2E03/Q0CBRYFLq7dSwOLTBX1Z/0NAv0Am85m3
UsAFdb2Na/9DQMh/T1COt1LAOSB2AXn/Q0BsRZo9h7dSwImt2SWB/0NASjE90oi3UsCcQGsQgf9D
QOjdpFONt1LAF2ZT04D/Q0Dqtc/KjrdSwB7uc7+A/0NAkQxKZ5u3UsDVahJ4if9DQMH89eOjt1LA
hSfAdJD/Q0BNSj8evbdSwL4kbKij/0NAFaMIkMu3UsAt3x8Srf9DQMDSp8bVt1LAQfUdZLX/Q0Dz
SDJ/7bdSwL+x8//M/0NALJrlcO63UsD3B4Hwzf9DQJ9wScX9t1LA2E2FFMz/Q0DOYgQ6GbhSwN/U
0bvI/0NA4v196yG4UsDphdhEx/9DQGuo6EAjuFLAtk7Amcj/Q0AoBxnjNbhSwGU7tDTb/0NAnpSz
V1K4UsD1y7og9v9DQMtTQ6dtuFLANQ9XtBAAREC4s1sPd7hSwBYoXL0YAERAh6Jc0bm4UsA/FFNk
SQBEQB72H2bJuFLATpMHv1QAREAknPbV0LhSwO+ogXp8AERAhe6dBta4UsBILRkDswBEQMvgrFzZ
uFLAvfX3deEAREAlpRQ22rhSwIEc15HuAERARf3KUdq4UsBBwJo98ABEQNxyWi/nuFLAXslqswAB
REArgMpl6rhSwDr+5X4DAURAaHyiLOq4UsDJl8brBAFEQCNg+hDkuFLAWEu+6SsBREDnDDOe47hS
wHelsHwuAURAmOGeDOO4UsDq7eG+MQFEQMv51CTguFLAXhSxNEEBREAS3/V43rhSwLeBjxhKAURA
h7Xd2Ny4UsBgDsa9UgFEQOcunOjWuFLAO6TrhnMBREBOXU9x1rhSwDUEjRl2AURA5bVWldS4UsAk
ZEddgAFEQHj7X4zUuFLAKr3AjoABREDUPGjn0rhSwLHZInyJAURA+VSaNM+4UsB0dCeQnQFEQAWl
CwzPuFLAv/3QbJ4BREAHhPEoyrhSwF9LzI+5AURAYpS8Jci4UsA0foi8xAFEQJMjtzPHuFLAb/rH
9MkBRECQ1JOaxbhSwG6sq8fSAURAkwiHFsC4UsBCBiE88QFEQDa314C/uFLAJi16dvQBREDn5OnY
vLhSwK+WRyADAkRAMOV7wLu4UsCCKKDRCAJEQD6gQle7uFLA+Z1F9AoCREDR6IcUu7hSwFes704M
AkRAYPKIPrq4UsBauiJDEAJEQAJXLHK4uFLAACm/wxgCREDFAjmNsrhSwGkI4KM0AkRA63ku97G4
UsA4TE5pNwJEQDdq3WuwuFLAPw5ztj4CRED2JJCBqrhSwO3MoRVaAkRAXzHpdqq4UsDCG+lEWgJE
QMIgyxuquFLA7uGw2VsCRECxayy6qbhSwBk5h4tdAkRAxvXXd6O4UsChK45XeQJEQDatakWfuFLA
CdgI+4sCRECfVB2knrhSwHB/f+OOAkRALkUY2Ji4UsD41KGfqQJEQEWJwT6WuFLA9JU+nLUCREDr
9SwVlbhSwD6ItPi6AkRAu0i/o5O4UsCbLHugwQJEQMUPlTmSuFLAPHFFEcgCREC5KKOFjbhSwOqu
8HfdAkRABf5g+4e4UsAHVSLm9gJEQOZH3KOHuFLA1Cnod/gCREAJ6UrkgrhSwER1LkQOA0RAG3dr
rHy4UsBNFa7jKgNEQBFsBbJ7uFLAR3QmVS8DREACRRNxd7hSwOBdF6RCA0RAbiWNpXO4UsC5f/Td
UwNEQHa1FhJzuFLAigmhfFYDREDQtcfncrhSwNbECj1XA0RAFavPoG24UsDmtPg8bwNEQLTqRRpm
uFLAjZbyZZADREB6PgC1ZbhSwKybhZaSA0RAQz/WdWO4UsBXF0O3nANEQH76HAVfuFLAbC8ma7ED
RECQFf/0XrhSwELpGbaxA0RAITUGNF64UsC15DU6tQNEQFRteZNcuFLAuHC80LwDREC+VxiGWrhS
wI4EO/fFA0RAgxcAN1K4UsA8bQAD6wNEQPQfEapQuFLANRa37PEDRECsUgjuTrhSwLR8e6j5A0RA
3vGUBEq4UsBnehSWEQREQOo6mH9FuFLAf8mSMyQEREAHrGBGRbhSwAnNORslBERAnF/txkO4UsAq
pogrKwREQITxIyZCuFLAV03JwjEEREBOZmD7QbhSwL6Q6m8yBERAvbIzWkC4UsDGaMqbOQREQJK6
pkZAuFLAdN7T8TkEREA7T9CgP7hSwByCTek8BERAt9i4qz64UsBhhbpLQQREQI5lOuE9uFLAwZn0
80gEREDBPLEFPbhSwO/HFJNdBERAUZTCijy4UsBKHczbaAREQF9KeGY7uFLAEqxdsYMEREDZqU7I
ObhSwGbXcueqBERAL9sibji4UsB6q4PayQREQOCyD303uFLAkSxeZd8EREBVxLZaNrhSwFhN79v9
BERAOqEI2jW4UsARsQMYCQVEQN962HA0uFLA9kjXqSgFREBcz11/M7hSwFS288c/BURA
','base64'))
UNION ALL SELECT 'LBNJ','Lumberton', ST_GeomFromWKB(decode('
AQMAAAABAAAA1QMAABFH479juVLADBdmwUL9Q0D85m6fYblSwJWWiAc//UNA0iS/N125UsC8+q9P
N/1DQJY1LvBbuVLAvs+4ETX9Q0CbTE+bWblSwG594Psw/UNABoIKYFa5UsDfalAXK/1DQHpYuAVU
uVLApJTDzCb9Q0Aq+oPbT7lSwJ7YQjQf/UNAg6HcYk+5UsBTmy9YHv1DQPwVev5JuVLAsupaghT9
Q0BwAK6JP7lSwLzh5vsA/UNA7rY+6Tu5UsAEIS82+vxDQKEg4xI6uVLA5S2Tofb8Q0DgEcjQN7lS
wI+EhhLz/ENA5m2r9DO5UsCtTEn97PxDQL3VkL0xuVLA8BPY8un8Q0Ax3avNK7lSwPoagMzh/ENA
YqTpzCi5UsDm0mnZ3fxDQG3zoNIRuVLAVzfCnb/8Q0C4VQgrBLlSwKdXfM+s/ENAVyi92fa4UsA3
lUK6mfxDQITqSlrzuFLA+y8lt5T8Q0D+8yWK8rhSwJTTZZyT/ENAObjG1Oy4UsDSdFXbi/xDQGL0
49HmuFLAjvnExoP8Q0A1hQri5LhSwJroRaqA/ENA73ZPOOS4UsDZYTyXf/xDQONwrJ7huFLAN7+m
YHv8Q0AsLl+O3rhSwK70gK50/ENAagt6NNy4UsC+V0LDbvxDQPr0KJzauFLA/1vijGn8Q0ATrpC2
1rhSwIOXFV1b/ENAaI7tNdS4UsDOqMo1UvxDQP7hTybQuFLAyH4RW0P8Q0CxuDQKyrhSwG8mWWIt
/ENA2VJTccW4UsCdy33ZHPxDQNzNmAPEuFLAvw8qthf8Q0CIrKJuwLhSwFO59dMK/ENAwalF87u4
UsDM8/y1+vtDQCVmq+i6uFLAjLLZ4Pb7Q0CnXmLMrbhSwOX5yKPG+0NA2FsuSqW4UsCVVc9lqPtD
QCMjblqSuFLA6h65y2P7Q0Bd1b8Kj7hSwOSjp8xX+0NAVFK2YIC4UsBvNBt6IvtDQDa6bC18uFLA
rghINBP7Q0BXCEj0brhSwJa++H/j+kNAZz+h2my4UsD9ZT/s2/pDQL8egFFluFLAbnEtvMD6Q0Am
ObUfYLhSwLK6z/6t+kNAes5k6li4UsCOKu39k/pDQCrMX+dXuFLAmKNuY5D6Q0DWH7a2VLhSwBMh
DQeF+kNAKjtAd1O4UsCLtaTrgPpDQH8iblFTuFLAzh8vb4D6Q0A4wLqjUrhSwAMwfjN++kNA6oDB
Ik24UsAlAkkWbPpDQLk0xQlJuFLA4ETONl76Q0D8BViASLhSwEihLW1c+kNAkPhR1Ea4UsCMCg7c
VvpDQHSe8zQ/uFLAebTJej36Q0BComThPrhSwBOyq2c8+kNAjgprvj64UsBEA4T0O/pDQLgnEao7
uFLA6Xxw0DH6Q0DbipWONLhSwNY0pWga+kNAeuMAFDO4UsClrFOEFfpDQONr9ngduFLAqUw2C875
Q0DL2iLnHLhSwC/qzSjM+UNAqujaGBS4UsB9y54qr/lDQD/nonoTuFLAloihI635Q0DNmu4jE7hS
wJyldAes+UNAYBwE+Ae4UsA8catph/lDQCMAEgYEuFLAG5dSe3r5Q0DSxmrA/bdSwBUzNLNl+UNA
J/rQz/y3UsB/Z/mVYvlDQJ1LiOn3t1LACC/sWVL5Q0B6mFVl7bdSwIXXIoEv+UNA6J29uNS3UsC1
Z/5a3fhDQEZAAc7Ct1LAAS3zVqH4Q0CEN5GOvLdSwE4wrVuL+ENAm2/IWrC3UsCZfwGnYvhDQL4B
FP+st1LAQGoKc1f4Q0C6NaybqLdSwLtwAIdI+ENA5PwdyKO3UsCPioodOPhDQFYkJ4qht1LAJYW5
rTD4Q0B4zX+JobdSwOeDjasw+ENA+qgpT5y3UsA/i4VUH/hDQATvXgSct1LA/pKIdh74Q0Drm9ld
mrdSwPgePZAZ+ENApYWvI5m3UsD2o5TSFfhDQIT5uuSWt1LA8czZrhD4Q0Csns5wk7dSwIFqfLgI
+ENA8mkGTZK3UsA0L6IXBvhDQPxVYsCNt1LAtBLvAvz3Q0Dyz/6ohLdSwMC01d3n90NAFXyFZoO3
UsCSVmkT5fdDQPYeLz6Bt1LAuU0DR+D3Q0AOCk9seLdSwCcYdqnM90NAsyiVW163UsCEd5OwkvdD
QMBPWENYt1LAZUHyPIX3Q0CVU2OKTLdSwI5dXV1r90NAxzbCikm3UsB5XUG/ZPdDQC4vWjI4t1LA
1R5Flz73Q0BGq8t4MrdSwNSFN+kx90NAaJU7qzG3UsAsJ2sgMPdDQGTvTRYvt1LAvdmIKCr3Q0De
jmUSKLdSwO+Iqd8a90NATe65lR+3UsC9tzv7B/dDQJHXYv4at1LA+HjUwv32Q0DNdoUuFLdSwGDY
i5Tu9kNA72NifAy3UsAhfifX3fZDQCBAwD0Ht1LAyVitTNL2Q0AqKBJv/bZSwK6g4sa89kNAxEZP
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
B3StUsDeg2Ixk/tDQLwLpY91rVLAgX/tIaf7Q0DT5vfndq1SwDK2jxq3+0NAyVjDIXitUsBmKWPQ
x/tDQNz6ZPt4rVLAiTD8tdL7Q0Al+eaZea1SwN0yuKXa+0NAdZDUAXutUsBpg4TR6/tDQAjmk+x7
rVLA1JlHtvb7Q0BkJVtafK1SwMzcSUD8+0NAWgbIZnytUsDC1Yvr/vtDQM5q3nt8rVLAC4LycwP8
Q0Cpj5q+e61SwE5d/d0d/ENA66PhSnutUsDoUCxuMPxDQEqVZKB6rVLAHAbGzFP8Q0Ca60tMeq1S
wKOcNAZo/ENA0cGiLXqtUsAFyjv1bvxDQKTrpAV6rVLAIFpXAHj8Q0B1r2itea1SwMeptRGC/ENA
SGemXXmtUsCZqKx3jfxDQG6nAhx5rVLAmrz+2Jb8Q0Bu/C+peK1SwIPLz/qq/ENAO+nfVHitUsAT
Me/HuPxDQM1s4z14rVLAe90Zi7z8Q0CyWqgNeK1SwFhHN3XE/ENAQVKQ0XetUsByVKq90vxDQMjS
mUV3rVLADMjYwOX8Q0A9xIXodq1SwCThyybz/ENAB0KgunatUsBAuFnc9/xDQP1p6Ll2rVLAjQ/I
7vf8Q0BXPCKddq1SwCIIpeP6/ENAjhBSmnatUsAkpa0t+/xDQNou05l2rVLAhse0Ovv8Q0Drmd1q
dq1SwNaZe28B/UNAHZ90bXatUsBj0PIICP1DQKPeeXF2rVLA0B6URxL9Q0BfSUx0dq1SwJS9WHgZ
/UNAPNyERXatUsCVJHr8Hv1DQPtpAfV1rVLAgJRf1CL9Q0A80s9ida1SwMe8pPsl/UNAWNGC4HSt
UsBCes0NKP1DQFvpij10rVLAbVCfayr9Q0DH7FNpc61SwChwhGQs/UNAUZlz4XGtUsDmKzUkMP1D
QKeEm1lwrVLAdUUB/TP9Q0Bb9MRkb61SwMFA/b82/UNADgRpCG+tUsDFpe/9N/1DQAQEHNJurVLA
AVnfuDj9Q0AN6OFPbq1SwCQBAf06/UNAt1xF3m2tUsBpoaOmPf1DQOBKpJ5trVLARNKGk0L9Q0AF
6AcQba1SwOPpA0lP/UNAwr+nkGytUsBJfXvXWP1DQK263o9srVLA14LUFFn9Q0DUmBOCbK1SwGYt
N0Zd/UNAgjvJtGytUsC1GE8EYf1DQHoteihtrVLAKDKnrGP9Q0DpsEPNba1SwOdfLfBl/UNA6L1H
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
','base64'));

DROP TABLE fst_dnc;
CREATE TABLE IF NOT EXISTS fst_dnc (
  id SERIAL PRIMARY KEY,
  tmpstmp TIMESTAMP NOT NULL DEFAULT NOW(),
  lang CHAR(2) DEFAULT 'en',
  zip CHAR(5) NOT NULL,
  primename VARCHAR(30) NOT NULL,
  add_number INTEGER NOT NULL,
  addr_id INTEGER REFERENCES fst_addr(id),
  rsn TEXT,
  remark TEXT
);



CREATE TABLE IF NOT EXISTS fst_work (
  id SERIAL PRIMARY KEY,
  tnum VARCHAR(4),
  hnum_start INTEGER,
  hnum_end INTEGER,
  addr_primename TEXT,
  FOREIGN KEY (tnum) REFERENCES fst_card(name)  
);

create OR REPLACE view fsv_addr_dc as
WITH w_addr_dc AS (
  SELECT c.name AS card_id, a.* FROM fst_addr a
  INNER JOIN fst_card c ON ST_Contains(c.geom,a.geom)
  WHERE NOT EXISTS (
    SELECT 1 FROM fst_dnc d
    WHERE d.addr_id = a.id
  )
), matched_work AS (
  SELECT d.* FROM w_addr_dc d
  LEFT JOIN fst_card c ON ST_Contains(c.geom, d.geom)
  JOIN fst_work w ON (
    COALESCE(c.name = w.tnum, 
            1 = (SELECT COUNT(DISTINCT q.card_id) 
                 FROM w_addr_dc q INNER JOIN fst_card c2 ON ST_Contains(c2.geom, q.geom)
                 WHERE q.primename = d.primename AND c2.name = w.tnum))
    AND COALESCE(d.primename = w.addr_primename, true) 
    AND d.add_number BETWEEN COALESCE(w.hnum_start, d.add_number) AND COALESCE(w.hnum_end, d.add_number)
  )
)
SELECT * FROM matched_work
UNION ALL
SELECT * FROM w_addr_dc
WHERE NOT EXISTS (
  SELECT 1  FROM matched_work
  );



CREATE OR REPLACE VIEW fsv_roadaddralias as
select id road_id,'J F Kennedy Way' primename,true get_closest from fst_road where primename in ( 'South John F Kennedy Way') and postcode_l = '08046'
union all select id,'Cottage Street',false from  fst_road where  
                  st_intersects(ST_GeomFromText('
			LineString (-74.82889171199119005 39.98321892938669464, -74.82874307480464893 39.983419416754586)
				  ',4326),geom) 
union all select id,'Rancocas Mount Holly Road',true from  fst_road where  
                  st_intersects(ST_GeomFromText('
LineString (-74.83869781364271034 40.00827593224035184, -74.83554898694221436 40.00922652143295721, -74.83451918198355202 40.00730553910623399, -74.8329348666625549 40.00845416771396401, -74.83140996316608096 40.00631534203060369, -74.82944937295634702 40.00736495093077139, -74.82818192069953511 40.0052657331304431, -74.82665701720307538 40.00659259721178529, -74.82659760537853799 40.0038794572245564, -74.82517172158962637 40.00595887108337934, -74.82529054523870116 40.00382004540001901, -74.8226764249590417 40.00514690948136121, -74.81678475235905523 40.00312690744708277, -74.81362602368780301 40.00368141780943176, -74.81291308179335431 40.0023941616111145, -74.81140798223839283 40.00265161285078364, -74.81108121720343718 40.00098808176372245, -74.80902160728612671 40.00045337534288592, -74.80860572451436497 39.99904729549549387, -74.80646689883100464 39.9990869033785188)
',4326),geom) 
union all
select id road_id,'J F Kennedy Way' primename,true get_closest from fst_road where primename in ( 'South John F Kennedy Way') and postcode_l = '08046'
union all
select id road_id,'Washington Street' primename,true get_closest from fst_road where primename = 'Washington Street Extension'
union all
select id road_id,'East Ct' primename,true get_closest from fst_road where primename = 'E Court'
union all
select id road_id,'Musket Lane' primename,true get_closest from fst_road where primename = 'Holly Road' and postcode_l = '08054'
union all
select id road_id,'Heather Wood Lane' primename,true get_closest from fst_road where primename = 'Heatherwood Lane' and postcode_l = '08054'
union all
select id road_id,'Rancocas Mount Holly Road' primename,true get_closest from fst_road where primename = 'Rancocas Road' and postcode_l = '08060'
union all
select id road_id,'Burlington Mt Holly Road' primename,true get_closest from fst_road where primename = 'Burlington Mount Holly Road' and postcode_l = '08060'
union all
select id road_id,'Bradfort Court' primename,true get_closest from fst_road where primename = 'Bradford Court' and postcode_l = '08060'
union all
select id,'John F Kennedy Way' primename,true from fst_road where primename in ( 'South John F Kennedy Way') and postcode_l = '08046'
union all
select id,'2nd Street',true from fst_road where primename = 'Second Street'
union all
select id,'Roslyn Drive',false from  fst_road where  
                  st_intersects(ST_GeomFromText('
				  LineString (-74.93906785042418051 40.01687130276751247, -74.938005950077752 40.01724371642758626)
				  ',4326),geom) 
union all
select id,'Centerton Road',false from  fst_road where  
                  st_intersects(ST_GeomFromText('
LineString (-74.87878749408345413 39.99418043606383577, -74.87840897784339234 39.9939216582959034, -74.87820020943833299 39.99436199131885417, -74.87655283139307016 39.99459236100299364)
',4326),geom) 
union all
select id,'Hinkle Way',false from  fst_road where  
                  st_intersects(ST_GeomFromText('
LineString (-74.93949302232131515 40.05664683349909438, -74.93913026031735569 40.0565779546375822, -74.93912566839324541 40.05625192802642687)
				  
				  ',4326),geom) 
union all
select id,'St Mihiel Drive',true from  fst_road where  
                  st_intersects(ST_GeomFromText('
LineString (-74.93949302232131515 40.05664683349909438, -74.93913026031735569 40.0565779546375822, -74.93912566839324541 40.05625192802642687)
				  
				  ',4326),geom) 
union all
select id,'Delaware',false from  fst_road where  
                  st_intersects(ST_GeomFromText('
LineString (-74.9618990773823981 40.04852697174640497, -74.9618990773823981 40.04852697174640497, -74.9615684588471396 40.04813206627373035)				  
				  ',4326),geom) 
union all
select id,'Snowberry',false from  fst_road where  
                  st_intersects(ST_GeomFromText('
LineString (-74.92680864322433365 40.00849187374534921, -74.9269739524919629 40.00822095022339653, -74.9272632437103141 40.00812911174138264, -74.92741018528154484 40.00828982908490872)
				  ',4326),geom) 
union all
select id,'Rockress Place',false from  fst_road where  
                  st_intersects(ST_GeomFromText('
LineString (-74.92868724549617809 40.0108453190152602, -74.9284438735188445 40.01054684394870975, -74.92781018799293236 40.01067082589943169, -74.92749334522997628 40.01025755273035855, -74.92721782978392753 40.0104687812389912)
				  ',4326),geom) 
union all
select id,'Dorchester Road',false from  fst_road where  
                  st_intersects(ST_GeomFromText('
LineString (-74.93221644858340369 40.01459768051473276, -74.932257775900311 40.01502472945610833, -74.93182154311072907 40.01529565297805391, -74.93234043053412563 40.01564923113381411)
				  ',4326),geom) 
union all
select id,'Primrose Place',false from fst_road where primename = 'Primrose Lane' and postcode_l = '08075'
union all
select id,'Fairview Street',false from fst_road where primename = 'South Fairview Street' and postcode_l = '08075'
union all
select id,'Fairview Street',false from fst_road where primename = 'South Fairview Street' and postcode_l = '08075'
union all
select id,'Lichtenthal Avenue',false from fst_road where primename = 'Lichtenthal Street' and postcode_l = '08075'
union all
select id, 'East Lane',false from fst_road where primename = 'E Lane' and
   ST_Intersects(ST_GeomFromText('LineString (-74.87471727345477746 40.02428031319017521, -74.87458691743211148 40.02596045748236975, -74.87160321291321452 40.02550421140302461)',4326),geom)
union all select id, 'East Court' ,false from fst_road where primename = 'E Court' and
   ST_Intersects(ST_GeomFromText('LineString (-74.87426102737543943 40.02479449527959332, -74.87394237932001317 40.02551145340427752, -74.8736020052608211 40.02480173728085333)',4326),geom)
union all
select id,'Snowberry',false from  fst_road where  
                  ST_Contains(ST_GeomFromText('
Polygon ((-74.92701153416388138 40.00823449933177756, 
                   -74.92701755755601312 40.00838800536743634, 
				   -74.92680900782880826 40.0083016692383211, 
				   -74.92701153416388138 40.00823449933177756))',4326),geom) 
union all
select id,'Tieman Circle',false from  fst_road where  
                  st_intersects(ST_GeomFromText('
LineString (-74.93937428861106298 40.05653956216056599, -74.93798100483731162 40.05574268115853442, -74.93902593807970902 40.05505455191405417)
				  ',4326),geom) 
union all
select id,'Rosebay Court',false from  fst_road where  
                  st_intersects(ST_GeomFromText('
Polygon ((-74.92518817974116985 40.01020099850048695, -74.9243942945777377 40.00970486903194967, -74.92477477744245107 40.00917106472587648, -74.92518817974116985 40.01020099850048695))
				  ',4326),geom) 
union all
select id, 'St Mihiel Drive', true from fst_road where
                  st_intersects(ST_GeomFromText('
LineString (-74.96543465352327473 40.03633525429195572, -74.96544645422194719 40.03606181910604533, -74.96577794106919157 40.03610069958272533, -74.96632344226017608 40.03567062207468297, -74.96678733410762163 40.03562396910079713)
',4326),geom) 
union all
select id,'Saint Michel Drive',false from  fst_road where  
                  st_intersects(ST_GeomFromText('
LineString (-74.93937428861106298 40.05653956216056599, -74.93798100483731162 40.05574268115853442, -74.93902593807970902 40.05505455191405417)
				  ',4326),geom)
union all select id, 'North Pl', false from fst_road where
      st_intersects(ST_GeomFromText('
      LineString (-74.85767322349065012 40.03840945764738279, -74.85738354344026391 40.03768163652080858, -74.85807877556116807 40.03737747246790946)',4326),geom)
union all select id, 'Mount Laurel Road', false from fst_road where
      st_intersects(ST_GeomFromText('
LineString (-74.84425741615750383 39.97511074563919209, -74.84335940800133358 39.97719644200191169, -74.8420123957670711 39.97718195799939878, -74.84140406766127285 39.97871726226640021, -74.83957908334389231 39.97919161334889537, -74.83962253535145237 39.9805820775907037, -74.838203103104604 39.98053862558315075, -74.83808723108445804 39.98124834170657493, -74.83752235498621985 39.981364213726728)',4326),geom)
union all select id, 'Mt Laurel Road', false from fst_road where
      st_intersects(ST_GeomFromText('
LineString (-74.84425741615750383 39.97511074563919209, -74.84335940800133358 39.97719644200191169, -74.8420123957670711 39.97718195799939878, -74.84140406766127285 39.97871726226640021, -74.83957908334389231 39.97919161334889537, -74.83962253535145237 39.9805820775907037, -74.838203103104604 39.98053862558315075, -74.83808723108445804 39.98124834170657493, -74.83752235498621985 39.981364213726728)',4326),geom)
union all select id, 'Mt Holly Road', true from fst_road where
      st_intersects(ST_GeomFromText('
      LineString (-74.83875102028076753 40.04870507815925862, -74.83838340816878087 40.04864277102163328, -74.83818402532838832 40.04820039034449763, -74.83761703037599489 40.0479698539352853, -74.83723072612272631 40.04719724542874104, -74.83684442186945773 40.04705393901220134)
',4326),geom)
union all select id, 'Cooper Springs Ptwy',false from fst_road where primename = 'Cooper Springs Pathway'
union all
select id,'Compass Crossing',true from  fst_road where  
                  primename = 'Compass Circle' and postcode_l = '08054'
union all
select id,'Bev-Rancocas Road',true from fst_road where primename = 'Beverly Road' AND postcode_l= '08046'
union all
select id,'Buoy Drive',false from fst_road where primename = 'Bouy Drive' and postcode_l = '08054'
union all
select id,'Marwood Turn',true from fst_road where primename = 'Marwood Turn' and postcode_l = '08046'
union all
select id,'Bridgeboro Street',true from fst_road where primename = 'Bridgeboro Street' and postcode_l = '08075'
union all
select id,'South Bridgeboro Street',false from fst_road where primename = 'Bridgeboro Street' and postcode_l = '08075'
union all
select id,'Orchard Avenue',true from fst_road where primename = 'Orchard Street' and postcode_l = '08075'
union all
select id,'Pennsylvania Avenue',true from fst_road where primename = 'Pennsylvania Avenue' and postcode_l = '08075'
union all
select id,'Muirfield Court',true from fst_road where primename = 'Muir Field Court' 
union all
select id,'Burlington Mt Holly Road',true from fst_road where primename =  'Burlington Mount Holly Road'
union all
select id,'Burlington Mt Holly Road',true from fst_road where primename =  'Burlington Mount Holly Road'
union all
select id,'Heron Lane',true   from fst_road where primename = 'Heron Court' and postcode_l = '08075'
union all
select id,primename,true   from fst_road where primename in
( 'Creek Road','Rancocas Avenue', 'Delaware Avenue','John F Kennedy Way');
-- drop MATERIALIZED VIEW fsv_addr2roadside cascade;

CREATE MATERIALIZED VIEW fsv_addr2roadside AS
  WITH all_addresses AS (
  SELECT DISTINCT a.id AS addr_id, a.primename, a.geom, a.add_number
  FROM fst_addr a
  JOIN fst_cong c ON ST_Intersects(c.geom, a.geom) 
  ),
  road_aliases AS (
  SELECT r.id AS road_id, r.primename AS alias_primename
  FROM fst_road r
  UNION
  SELECT ra.road_id, ra.primename AS alias_primename
  FROM fsv_roadaddralias ra
  ), -- here.
  closest_road_aliases AS (
  SELECT a.addr_id, ra.road_id, ROW_NUMBER()
  OVER (PARTITION BY a.addr_id ORDER BY a.geom <-> r.geom) AS sequence_number,
  r.fromaddr_l,
  r.toaddr_l,
  r.fromaddr_r,
  r.toaddr_r
  FROM all_addresses a
  CROSS JOIN road_aliases ra
  JOIN fst_road r ON r.id = ra.road_id AND ra.alias_primename = a.primename
  )
  SELECT DISTINCT ON (a.addr_id) a.addr_id, c.road_id
  FROM all_addresses a
  LEFT JOIN (
  SELECT addr_id, road_id, sequence_number,fromaddr_l,fromaddr_r,toaddr_l,toaddr_r
  FROM closest_road_aliases
  ORDER BY sequence_number desc
 ) c ON c.addr_id = a.addr_id
 JOIN fst_road r ON r.id = c.road_id and CASE WHEN (c.sequence_number =2 OR c.sequence_number = 3) THEN 
   ST_DWithin(a.geom,r.geom,0.0001)  AND (
  (COALESCE(c.fromaddr_l,0) <> 0  AND mod(c.fromaddr_l,2) = mod(c.toaddr_l,2) AND
  mod(c.fromaddr_l,2) = mod(a.add_number,2) AND 
  a.add_number BETWEEN SYMMETRIC c.fromaddr_l AND c.toaddr_l) OR 
  (COALESCE(c.fromaddr_r,0) <> 0  AND mod(c.fromaddr_r,2) = mod(c.toaddr_r,2) AND
  mod(c.fromaddr_r,2) = mod(a.add_number,2) AND 
  a.add_number BETWEEN SYMMETRIC c.fromaddr_r AND c.toaddr_r ))
  ELSE
    sequence_number = 1
  END;

 

create  materialized view fsv_prrr2 AS
WITH filtered_fst_road AS (
    SELECT fst_road.* FROM fst_road
       JOIN fst_cong ON ST_Contains(fst_cong.geom, fst_road.geom)
),
connected_road AS (
  SELECT 
    r1.primename,  r1.id road1_id, 
    r2.id road2_id 
  FROM  filtered_fst_road r1 
	LEFT JOIN filtered_fst_road r2 ON ST_Touches(r1.geom, r2.geom) 
    AND r1.primename = r2.primename 
  WHERE r1.primename is not null
), 
ep2 as (
  select 
    r1.primename, r1.road1_id, r2.road1_id road2_id 
  from (
  SELECT r.primename, r.road1_id, 
  count(r.road2_id) cnt 
  FROM connected_road r 
  group by 1, 2 
  having count(r.road2_id)<= 1
  ) r1, 
    (
      SELECT r.primename, r.road1_id, count(r.road2_id) cnt 
      FROM connected_road r 
      group by 1, 2 having count(r.road2_id)<= 1
    ) r2 
  where 
    r1.primename = r2.primename 
    and ( r1.cnt = 0 or r1.road1_id < r2.road1_id)
), 
final AS (
  WITH RECURSIVE traverse AS (
    SELECT 
      ep2.primename, ep2.road1_id, 
      ep2.road2_id, array[cr.road1_id]  road_id 
    FROM 
      ep2 JOIN connected_road cr ON cr.road1_id = ep2.road1_id 
    UNION ALL 
    SELECT 
      t.primename, t.road1_id, t.road2_id, t.road_id || cr.road2_id 
    FROM 
      traverse t 
      JOIN connected_road cr ON cr.road1_id = t.road_id[array_length(t.road_id, 1) ] 
    WHERE NOT cr.road2_id = ANY(t.road_id)
  ), 
  final_traverse AS (
    SELECT DISTINCT ON (primename, road1_id) primename, 
      road1_id, road2_id, road_id 
    FROM traverse WHERE road2_id = road_id[array_length(road_id, 1) ]
  ), 
  unnested AS (
    SELECT 
      primename, road1_id,  unnest(road_id) road_id, 
      generate_subscripts(road_id, 1) seqno 
    FROM final_traverse
  ), 
  street_ids AS (
    SELECT  primename,  road1_id, DENSE_RANK() OVER (
        ORDER BY road1_id) street_id 
    FROM unnested  GROUP BY road1_id, primename
  ) 
  SELECT 
    s.street_id, u.road1_id,u.seqno, 
    u.road_id  FROM unnested u 
	JOIN street_ids s ON s.road1_id= u.road1_id
) 
SELECT * FROM final;



CREATE TABLE IF NOT EXISTS colors (
  tnum VARCHAR(4) PRIMARY KEY,
  color INTEGER
);



CREATE OR REPLACE PROCEDURE assign_colors(IN reset BOOLEAN DEFAULT FALSE)
LANGUAGE plpgsql
AS $$
DECLARE
  tnum_text text;
  CNT INT;
  insert_cnt INT;
  color_num INT;  
BEGIN
  CNT := 0;

  -- Iterate over the tnum values
if reset THEN
      DELETE FROM colors;
END IF;
-- insert into colors (tnum,color)
--    with a as (select tnum from ntaddr
--      union all select tnum from fsv_bcomplex
--    )
--    select distinct *,NULL::integer from a where tnum not in (select tnum  from colors) AND tnum IS NOT null;
SELECT count(*) into CNT from colors where  color is not null;
  
  LOOP

  CNT := CNT + 1;
  RAISE NOTICE '%', CNT;
  

insert into colors (tnum,color)
WITH 
a as MATERIALIZED (
 select tnum, geom from ntaddr where rotate > -1000
  union all select tnum, (st_dumppoints(geom)).geom from fsv_bcomplex
),mintnum AS  (
select min(tnum) tnum from ntaddr a where NOT EXISTS (SELECT 1 FROM colors c WHERE a.tnum = c.tnum)
),b as (
select a.tnum,a.geom,c.color from a
left join colors c on c.tnum = a.tnum
), c as (
select a2.color, min(a1.geom <->a2.geom) dist from b a1, b a2,mintnum m
where a1.tnum = m.tnum and a1.tnum <> a2.tnum and a2.color is not null
group by 1
), d AS (
select mintnum.tnum,c.color,c.dist 
from c,mintnum order by 3 desc limit 1
), e AS (
SELECT * FROM d 
)
SELECT COALESCE(mintnum.tnum,
(SELECT min(tnum) FROM tnbounds WHERE tnum NOT IN (SELECT tnum FROM colors))) tnum,
 CASE WHEN (SELECT max(color) FROM colors) >= 6 THEN
(SELECT d.color FROM d) 
ELSE (SELECT COALESCE (max(colors.color),0)+1 FROM colors) END color FROM mintnum;


  RAISE NOTICE 'updating % %', tnum_text,color_num;
-- update colors set color = color_num
-- where tnum = tnum_text;
    
    GET DIAGNOSTICS insert_cnt = ROW_COUNT;
    COMMIT;
    -- Exit the loop if no more inserts were made
    IF insert_cnt = 0 THEN
      EXIT;
    END IF;

  END LOOP;


END;
$$;


